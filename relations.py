from graph import Graph  # https://github.com/root-11/graph-theory
from kf_lib_data_ingest.common.concept_schema import CONCEPT

(
    ONE,
    MANY,
    ONEZERO,
    ANY,
    ONE_ONE,
    ONE_MANY,
    ONE_ONEZERO,
    ONE_ANY,
    MANY_ONE,
    MANY_MANY,
    MANY_ONEZERO,
    MANY_ANY,
    ONEZERO_ONE,
    ONEZERO_MANY,
    ONEZERO_ONEZERO,
    ONEZERO_ANY,
    ANY_ONE,
    ANY_MANY,
    ANY_ONEZERO,
    ANY_ANY,
) = range(1, 21)

RELATIONS = {
    ONE: ("exactly 1", lambda x: x == 1),
    MANY: ("at least 1", lambda x: x >= 1),
    ONEZERO: ("up to 1", lambda x: x <= 1),
}

TESTS = {
    ONE_ONE: RELATIONS[ONE],
    ONE_MANY: RELATIONS[MANY],
    ONE_ONEZERO: RELATIONS[ONEZERO],
    MANY_ONE: RELATIONS[ONE],
    MANY_MANY: RELATIONS[MANY],
    MANY_ONEZERO: RELATIONS[ONEZERO],
    ONEZERO_ONE: RELATIONS[ONE],
    ONEZERO_MANY: RELATIONS[MANY],
}

REVERSE_TESTS = {
    ONE_ONE: RELATIONS[ONE],
    ONE_MANY: RELATIONS[ONE],
    ONE_ONEZERO: RELATIONS[ONE],
    MANY_ONE: RELATIONS[MANY],
    MANY_MANY: RELATIONS[MANY],
    MANY_ONEZERO: RELATIONS[MANY],
    ONEZERO_ONE: RELATIONS[ONEZERO],
    ONEZERO_MANY: RELATIONS[ONEZERO],
}

H = Graph()
HIERARCHY = H

def is_identifier(x):
    return x.endswith("|ID")

########### HIERARCHY Edges point ------> this way, upwards toward the study ID

### identifiers

# was MANY_MANY
H.add_edge(CONCEPT.PARTICIPANT.ID, CONCEPT.FAMILY.ID, MANY_ONEZERO)
# was BIOSPECIMEN.ID to PARTICIPANT.ID
H.add_edge(CONCEPT.BIOSPECIMEN_GROUP.ID, CONCEPT.PARTICIPANT.ID, MANY_ONE)
H.add_edge(CONCEPT.BIOSPECIMEN.ID, CONCEPT.BIOSPECIMEN_GROUP.ID, MANY_ONE)
H.add_edge(CONCEPT.SEQUENCING.ID, CONCEPT.BIOSPECIMEN.ID, ONE_ONE)
H.add_edge(CONCEPT.GENOMIC_FILE.ID, CONCEPT.SEQUENCING.ID, MANY_ONE)

### participant optional attributes

H.add_edge(CONCEPT.PARTICIPANT.GENDER, CONCEPT.PARTICIPANT.ID, ONEZERO_MANY)
H.add_edge(CONCEPT.PARTICIPANT.ETHNICITY, CONCEPT.PARTICIPANT.ID, ONEZERO_MANY)
H.add_edge(CONCEPT.PARTICIPANT.RACE, CONCEPT.PARTICIPANT.ID, ONEZERO_MANY)
H.add_edge(CONCEPT.PARTICIPANT.SPECIES, CONCEPT.PARTICIPANT.ID, ONEZERO_MANY)
H.add_edge(CONCEPT.PARTICIPANT.ENROLLMENT_AGE_DAYS, CONCEPT.PARTICIPANT.ID, ONEZERO_MANY)

### biospecimen required attributes

H.add_edge(CONCEPT.BIOSPECIMEN.ANALYTE, CONCEPT.BIOSPECIMEN.ID, ONE_MANY)

### biospecimen optional attributes

H.add_edge(CONCEPT.BIOSPECIMEN.COMPOSITION, CONCEPT.BIOSPECIMEN.ID, ONEZERO_MANY)
H.add_edge(CONCEPT.BIOSPECIMEN.TISSUE_TYPE, CONCEPT.BIOSPECIMEN.ID, ONEZERO_MANY)
H.add_edge(CONCEPT.BIOSPECIMEN.ANATOMY_SITE, CONCEPT.BIOSPECIMEN.ID, ONEZERO_MANY)
H.add_edge(CONCEPT.BIOSPECIMEN.TUMOR_DESCRIPTOR, CONCEPT.BIOSPECIMEN.ID, ONEZERO_MANY)
H.add_edge(CONCEPT.BIOSPECIMEN.EVENT_AGE_DAYS, CONCEPT.BIOSPECIMEN.ID, ONEZERO_MANY)
H.add_edge(CONCEPT.BIOSPECIMEN.SPATIAL_DESCRIPTOR, CONCEPT.BIOSPECIMEN.ID, ONEZERO_MANY)
H.add_edge(CONCEPT.BIOSPECIMEN.SHIPMENT_ORIGIN, CONCEPT.BIOSPECIMEN.ID, ONEZERO_MANY)
H.add_edge(CONCEPT.BIOSPECIMEN.SHIPMENT_DATE, CONCEPT.BIOSPECIMEN.ID, ONEZERO_MANY)
H.add_edge(CONCEPT.BIOSPECIMEN.CONCENTRATION_MG_PER_ML, CONCEPT.BIOSPECIMEN.ID, ONEZERO_MANY)
H.add_edge(CONCEPT.BIOSPECIMEN.VOLUME_UL, CONCEPT.BIOSPECIMEN.ID, ONEZERO_MANY)
H.add_edge(CONCEPT.BIOSPECIMEN.SAMPLE_PROCUREMENT, CONCEPT.BIOSPECIMEN.ID, ONEZERO_MANY)

### genomic file required attributes

H.add_edge(CONCEPT.GENOMIC_FILE.HARMONIZED, CONCEPT.GENOMIC_FILE.ID, ONE_MANY)
H.add_edge(CONCEPT.GENOMIC_FILE.REFERENCE_GENOME, CONCEPT.GENOMIC_FILE.ID, ONE_MANY)

### sequencing required attributes

H.add_edge(CONCEPT.SEQUENCING.LIBRARY_NAME, CONCEPT.SEQUENCING.ID, ONEZERO_ONE)
H.add_edge(CONCEPT.SEQUENCING.STRATEGY, CONCEPT.SEQUENCING.ID, ONE_MANY)
H.add_edge(CONCEPT.SEQUENCING.PAIRED_END, CONCEPT.SEQUENCING.ID, ONE_MANY)
H.add_edge(CONCEPT.SEQUENCING.PLATFORM, CONCEPT.SEQUENCING.ID, ONEZERO_MANY)
H.add_edge(CONCEPT.SEQUENCING.INSTRUMENT, CONCEPT.SEQUENCING.ID, ONEZERO_MANY)
